<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="eventLog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA4HwGQOCxBkDgdgZA
        4DQGQOACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkDgIAZA
        4PsGQOD/BkDg/wZA4OkGQOCbBkDgQgZA4AIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABkDgswZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg2QZA4GIGQOBeBkDgjQZA4KsGQOC9BkDgvwZA
        4LEGQOCTBkDgYgZA4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGQOBUBkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4McGQOBYBkDgAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA4AwGQOD5BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQODNBkDgLgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA4MkGQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD3BkDgVAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkDgqwZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD7BkDgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA4CIGQODxBkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQODzBkDgJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkDgsQZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOC5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA
        4CoGQOD/BkDg/wZA4P8GQOD/BkDg9QZA4NMGQODlBkDg/wZA4P0GQODnBkDg/QZA4P8GQOD/BkDg/wZA
        4OkGQOD1BkDg9wZA4M8GQODTBkDg/QZA4P8GQOD/BkDg/wZA4P8GQOAyAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABkDggQZA4P8GQOD/BkDg/wZA4P8GQOAmBkDgGgZA4AgGQOBoBkDg6wAAAAAGQODfBkDgYAZA
        4EwGQOD/BkDgGAZA4KEGQOBSBkDgDAZA4AoGQOAyBkDg8wZA4P8GQOD/BkDg/wZA4IsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGQOC5BkDg/wZA4P8GQOD/BkDg/wZA4O0GQOD/BkDgpQZA4AAGQODvBkDgAAZA
        4NMGQOAcBkDgEAZA4PEGQOAOBkDgrwZA4OcGQOD9BkDg0QAAAAAGQOC3BkDg/wZA4P8GQOD/BkDgxwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA4NMGQOD/BkDg/wZA4P8GQOD/BkDg5wZA4GYGQOAMBkDgQgZA
        4P8GQOAMBkDgowZA4CoGQOBQBkDgqQZA4AYGQOC9BkDg8wZA4HYGQOAUBkDgGgZA4OkGQOD/BkDg/wZA
        4P8GQODjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkDg1QZA4P8GQOD/BkDg/wZA4P8GQOA6BkDgLAZA
        4K0GQOD7BkDg/wZA4BwGQOBWBkDgagZA4KEGQOBYAAAAAAZA4MsGQOBmBkDgEgZA4I8GQODvBkDg/wZA
        4P8GQOD/BkDg/wZA4OUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOC9BkDg/wZA4P8GQOD/BkDg/wZA
        4DIGQOBOBkDgqwZA4LEGQOD/BkDgLAZA4BAGQOCtBkDg6wZA4BQAAAAABkDg2QZA4GAGQOAmBkDgowZA
        4JEGQOD/BkDg/wZA4P8GQOD/BkDgywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA4IcGQOD/BkDg/wZA
        4P8GQOD/BkDg2wZA4F4GQOBEBkDgiQZA4P8GQOB+BkDgWAZA4O0GQOD/BkDgeAZA4FgGQODtBkDg6wZA
        4GgGQOA8BkDgWgZA4PsGQOD/BkDg/wZA4P8GQOCXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkDgMgZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4EIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABkDguwZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQODLBkDgAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGQOAoBkDg9QZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg+QZA4DQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOBYBkDg/QZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOBmAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOBaBkDg+QZA4P8GQOD/BkDg/wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD7BkDgaAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOA0BkDg0wZA
        4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg2QZA
        4DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAGQOAEBkDgYgZA4NUGQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg2wZA
        4GoGQOAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABkDgAAZA4DIGQOB4BkDgrQZA4M8GQODhBkDg4QZA4NEGQOCvBkDgfAZA
        4DYGQOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////f////wf///8Bgf//gAA//4AAD/+AAAf/gA
        AD/4AAAf8AAAD/AAAA/g9a8H4BWhB+B1pwfgx2wH4MZsB+BmZwfwAAAP8AAAD/gAAB/8AAA//gAAf/8A
        AP//wAP///gf//////////////////////8=
</value>
  </data>
</root>